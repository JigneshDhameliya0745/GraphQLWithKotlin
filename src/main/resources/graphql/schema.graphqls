type Author {
    id: ID!
    name: String!
    books: [Book!]
}

type Book {
    id: ID!
    title: String!
    genre: String!
    author: Author!
}

input AuthorCreateRequestInput {
    name: String!
    books: [BookFromAuthorInput!]
}

input AuthorUpdateRequestInput {
    id: ID!
    name: String!
    books: [BookFromAuthorInput!]
}

input BookFromAuthorInput {
    title: String!
    genre: String!
}

input BookCreateRequestInput {
    title: String!
    genre: String!
    authorId: ID!
}

input BookUpdateRequestInput {
    id: ID!
    title: String!
    genre: String!
    authorId: ID!
}

type Query {
    getAllAuthors: [Author!]!
    getAuthorById(id: ID!): Author
    getAllBooks: [Book!]!
    getBookById(id: ID!): Book
}

type Mutation {
    createAuthor(authorRequest: AuthorCreateRequestInput): Author
    createBook(bookRequest: BookCreateRequestInput): Book
    updateAuthor(authorRequest: AuthorUpdateRequestInput): Author
    updateBook(bookRequest: BookUpdateRequestInput): Book
    deleteAuthor(id: ID!): Boolean
    deleteBook(id: ID!): Boolean
}
